service:
  name: ServerlessAPP

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  environment:
    EVENTS_TABLE_NAME: ${self:custom.EventsTable.name}
  iamRoleStatements:
    - ${file(iam/EventsTableIAM.yml):EventsTableIAM}

resources:
  Resources:
    EventsTable: ${file(resources/EventsTable.yml):EventsTable}
  
functions:
  createEvent:
    handler: src/handlers/createEvent.handler
    events:
      - http:
          method: POST
          path: /events
          authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-dev-auth
  getEvents:
    handler: src/handlers/getEvents.handler
    events:
      - http:
          method: GET
          path: /events
          authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-dev-auth
  getEventById:
    handler: src/handlers/getEventById.handler
    events:
      - http:
          method: GET
          path: /events/{id}
          authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-dev-auth
  addSuscriber:
    handler: src/handlers/addSuscriber.handler
    events:
      - http:
          method: POST
          path: /events/{id}/suscribers
          authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-dev-auth
  removeSuscriber:
    handler: src/handlers/removeSuscriber.handler
    events:
      - http:
          method: DELETE
          path: /events/{id}/suscribers
          authorizer: arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:auth-service-dev-auth



custom:
  EventsTable:
    name: !Ref EventsTable
    arn: !GetAtt EventsTable.Arn
  bundle:
    linting: false
